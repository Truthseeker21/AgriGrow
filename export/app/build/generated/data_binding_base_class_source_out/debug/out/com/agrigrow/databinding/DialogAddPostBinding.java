// Generated by view binder compiler. Do not edit!
package com.agrigrow.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.agrigrow.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddPostBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonAddImage;

  @NonNull
  public final Button buttonCancel;

  @NonNull
  public final Button buttonPost;

  @NonNull
  public final Button buttonRemoveImage;

  @NonNull
  public final TextInputEditText editTextPostContent;

  @NonNull
  public final TextInputEditText editTextPostTitle;

  @NonNull
  public final ImageView imageViewPostPreview;

  @NonNull
  public final LinearLayout layoutImagePreview;

  @NonNull
  public final Spinner spinnerPostCategory;

  @NonNull
  public final TextInputLayout textInputLayoutPostContent;

  @NonNull
  public final TextInputLayout textInputLayoutPostTitle;

  @NonNull
  public final TextView textViewTitle;

  private DialogAddPostBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonAddImage,
      @NonNull Button buttonCancel, @NonNull Button buttonPost, @NonNull Button buttonRemoveImage,
      @NonNull TextInputEditText editTextPostContent, @NonNull TextInputEditText editTextPostTitle,
      @NonNull ImageView imageViewPostPreview, @NonNull LinearLayout layoutImagePreview,
      @NonNull Spinner spinnerPostCategory, @NonNull TextInputLayout textInputLayoutPostContent,
      @NonNull TextInputLayout textInputLayoutPostTitle, @NonNull TextView textViewTitle) {
    this.rootView = rootView;
    this.buttonAddImage = buttonAddImage;
    this.buttonCancel = buttonCancel;
    this.buttonPost = buttonPost;
    this.buttonRemoveImage = buttonRemoveImage;
    this.editTextPostContent = editTextPostContent;
    this.editTextPostTitle = editTextPostTitle;
    this.imageViewPostPreview = imageViewPostPreview;
    this.layoutImagePreview = layoutImagePreview;
    this.spinnerPostCategory = spinnerPostCategory;
    this.textInputLayoutPostContent = textInputLayoutPostContent;
    this.textInputLayoutPostTitle = textInputLayoutPostTitle;
    this.textViewTitle = textViewTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonAddImage;
      Button buttonAddImage = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddImage == null) {
        break missingId;
      }

      id = R.id.buttonCancel;
      Button buttonCancel = ViewBindings.findChildViewById(rootView, id);
      if (buttonCancel == null) {
        break missingId;
      }

      id = R.id.buttonPost;
      Button buttonPost = ViewBindings.findChildViewById(rootView, id);
      if (buttonPost == null) {
        break missingId;
      }

      id = R.id.buttonRemoveImage;
      Button buttonRemoveImage = ViewBindings.findChildViewById(rootView, id);
      if (buttonRemoveImage == null) {
        break missingId;
      }

      id = R.id.editTextPostContent;
      TextInputEditText editTextPostContent = ViewBindings.findChildViewById(rootView, id);
      if (editTextPostContent == null) {
        break missingId;
      }

      id = R.id.editTextPostTitle;
      TextInputEditText editTextPostTitle = ViewBindings.findChildViewById(rootView, id);
      if (editTextPostTitle == null) {
        break missingId;
      }

      id = R.id.imageViewPostPreview;
      ImageView imageViewPostPreview = ViewBindings.findChildViewById(rootView, id);
      if (imageViewPostPreview == null) {
        break missingId;
      }

      id = R.id.layoutImagePreview;
      LinearLayout layoutImagePreview = ViewBindings.findChildViewById(rootView, id);
      if (layoutImagePreview == null) {
        break missingId;
      }

      id = R.id.spinnerPostCategory;
      Spinner spinnerPostCategory = ViewBindings.findChildViewById(rootView, id);
      if (spinnerPostCategory == null) {
        break missingId;
      }

      id = R.id.textInputLayoutPostContent;
      TextInputLayout textInputLayoutPostContent = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutPostContent == null) {
        break missingId;
      }

      id = R.id.textInputLayoutPostTitle;
      TextInputLayout textInputLayoutPostTitle = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutPostTitle == null) {
        break missingId;
      }

      id = R.id.textViewTitle;
      TextView textViewTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewTitle == null) {
        break missingId;
      }

      return new DialogAddPostBinding((ConstraintLayout) rootView, buttonAddImage, buttonCancel,
          buttonPost, buttonRemoveImage, editTextPostContent, editTextPostTitle,
          imageViewPostPreview, layoutImagePreview, spinnerPostCategory, textInputLayoutPostContent,
          textInputLayoutPostTitle, textViewTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
