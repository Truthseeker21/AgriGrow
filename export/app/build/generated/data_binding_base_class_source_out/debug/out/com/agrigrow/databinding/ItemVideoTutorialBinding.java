// Generated by view binder compiler. Do not edit!
package com.agrigrow.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.agrigrow.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemVideoTutorialBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageButton btnFavorite;

  @NonNull
  public final ImageButton btnShare;

  @NonNull
  public final CardView cardVideo;

  @NonNull
  public final FrameLayout frameThumbnail;

  @NonNull
  public final ImageView ivThumbnail;

  @NonNull
  public final LinearLayout layoutContent;

  @NonNull
  public final TextView tvAuthor;

  @NonNull
  public final TextView tvCategory;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvDifficulty;

  @NonNull
  public final TextView tvDuration;

  @NonNull
  public final TextView tvVideoDescription;

  @NonNull
  public final TextView tvVideoTitle;

  @NonNull
  public final TextView tvViewCount;

  @NonNull
  public final View viewWatchedIndicator;

  private ItemVideoTutorialBinding(@NonNull CardView rootView, @NonNull ImageButton btnFavorite,
      @NonNull ImageButton btnShare, @NonNull CardView cardVideo,
      @NonNull FrameLayout frameThumbnail, @NonNull ImageView ivThumbnail,
      @NonNull LinearLayout layoutContent, @NonNull TextView tvAuthor, @NonNull TextView tvCategory,
      @NonNull TextView tvDate, @NonNull TextView tvDifficulty, @NonNull TextView tvDuration,
      @NonNull TextView tvVideoDescription, @NonNull TextView tvVideoTitle,
      @NonNull TextView tvViewCount, @NonNull View viewWatchedIndicator) {
    this.rootView = rootView;
    this.btnFavorite = btnFavorite;
    this.btnShare = btnShare;
    this.cardVideo = cardVideo;
    this.frameThumbnail = frameThumbnail;
    this.ivThumbnail = ivThumbnail;
    this.layoutContent = layoutContent;
    this.tvAuthor = tvAuthor;
    this.tvCategory = tvCategory;
    this.tvDate = tvDate;
    this.tvDifficulty = tvDifficulty;
    this.tvDuration = tvDuration;
    this.tvVideoDescription = tvVideoDescription;
    this.tvVideoTitle = tvVideoTitle;
    this.tvViewCount = tvViewCount;
    this.viewWatchedIndicator = viewWatchedIndicator;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemVideoTutorialBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemVideoTutorialBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_video_tutorial, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemVideoTutorialBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_favorite;
      ImageButton btnFavorite = ViewBindings.findChildViewById(rootView, id);
      if (btnFavorite == null) {
        break missingId;
      }

      id = R.id.btn_share;
      ImageButton btnShare = ViewBindings.findChildViewById(rootView, id);
      if (btnShare == null) {
        break missingId;
      }

      CardView cardVideo = (CardView) rootView;

      id = R.id.frame_thumbnail;
      FrameLayout frameThumbnail = ViewBindings.findChildViewById(rootView, id);
      if (frameThumbnail == null) {
        break missingId;
      }

      id = R.id.iv_thumbnail;
      ImageView ivThumbnail = ViewBindings.findChildViewById(rootView, id);
      if (ivThumbnail == null) {
        break missingId;
      }

      id = R.id.layout_content;
      LinearLayout layoutContent = ViewBindings.findChildViewById(rootView, id);
      if (layoutContent == null) {
        break missingId;
      }

      id = R.id.tv_author;
      TextView tvAuthor = ViewBindings.findChildViewById(rootView, id);
      if (tvAuthor == null) {
        break missingId;
      }

      id = R.id.tv_category;
      TextView tvCategory = ViewBindings.findChildViewById(rootView, id);
      if (tvCategory == null) {
        break missingId;
      }

      id = R.id.tv_date;
      TextView tvDate = ViewBindings.findChildViewById(rootView, id);
      if (tvDate == null) {
        break missingId;
      }

      id = R.id.tv_difficulty;
      TextView tvDifficulty = ViewBindings.findChildViewById(rootView, id);
      if (tvDifficulty == null) {
        break missingId;
      }

      id = R.id.tv_duration;
      TextView tvDuration = ViewBindings.findChildViewById(rootView, id);
      if (tvDuration == null) {
        break missingId;
      }

      id = R.id.tv_video_description;
      TextView tvVideoDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvVideoDescription == null) {
        break missingId;
      }

      id = R.id.tv_video_title;
      TextView tvVideoTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvVideoTitle == null) {
        break missingId;
      }

      id = R.id.tv_view_count;
      TextView tvViewCount = ViewBindings.findChildViewById(rootView, id);
      if (tvViewCount == null) {
        break missingId;
      }

      id = R.id.view_watched_indicator;
      View viewWatchedIndicator = ViewBindings.findChildViewById(rootView, id);
      if (viewWatchedIndicator == null) {
        break missingId;
      }

      return new ItemVideoTutorialBinding((CardView) rootView, btnFavorite, btnShare, cardVideo,
          frameThumbnail, ivThumbnail, layoutContent, tvAuthor, tvCategory, tvDate, tvDifficulty,
          tvDuration, tvVideoDescription, tvVideoTitle, tvViewCount, viewWatchedIndicator);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
