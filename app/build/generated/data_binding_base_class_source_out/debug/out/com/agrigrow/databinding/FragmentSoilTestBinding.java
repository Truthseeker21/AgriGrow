// Generated by view binder compiler. Do not edit!
package com.agrigrow.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.agrigrow.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.chip.Chip;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSoilTestBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appbar;

  @NonNull
  public final Button btnAnalyze;

  @NonNull
  public final Button btnEmptyAddTest;

  @NonNull
  public final CardView cardAnalysisButton;

  @NonNull
  public final CardView cardSearch;

  @NonNull
  public final Chip chipAcidic;

  @NonNull
  public final Chip chipAlkaline;

  @NonNull
  public final Chip chipAll;

  @NonNull
  public final LinearLayout chipContainer;

  @NonNull
  public final Chip chipRecent;

  @NonNull
  public final EditText etSearch;

  @NonNull
  public final FloatingActionButton fabAddTest;

  @NonNull
  public final ImageView ivEmptyState;

  @NonNull
  public final LinearLayout layoutEmptyState;

  @NonNull
  public final ProgressBar progressLoading;

  @NonNull
  public final RecyclerView recyclerSoilTests;

  @NonNull
  public final TextView tvEmptyMessage;

  @NonNull
  public final TextView tvEmptyTitle;

  @NonNull
  public final TextView tvSubtitle;

  @NonNull
  public final TextView tvTitle;

  private FragmentSoilTestBinding(@NonNull CoordinatorLayout rootView, @NonNull AppBarLayout appbar,
      @NonNull Button btnAnalyze, @NonNull Button btnEmptyAddTest,
      @NonNull CardView cardAnalysisButton, @NonNull CardView cardSearch, @NonNull Chip chipAcidic,
      @NonNull Chip chipAlkaline, @NonNull Chip chipAll, @NonNull LinearLayout chipContainer,
      @NonNull Chip chipRecent, @NonNull EditText etSearch,
      @NonNull FloatingActionButton fabAddTest, @NonNull ImageView ivEmptyState,
      @NonNull LinearLayout layoutEmptyState, @NonNull ProgressBar progressLoading,
      @NonNull RecyclerView recyclerSoilTests, @NonNull TextView tvEmptyMessage,
      @NonNull TextView tvEmptyTitle, @NonNull TextView tvSubtitle, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.appbar = appbar;
    this.btnAnalyze = btnAnalyze;
    this.btnEmptyAddTest = btnEmptyAddTest;
    this.cardAnalysisButton = cardAnalysisButton;
    this.cardSearch = cardSearch;
    this.chipAcidic = chipAcidic;
    this.chipAlkaline = chipAlkaline;
    this.chipAll = chipAll;
    this.chipContainer = chipContainer;
    this.chipRecent = chipRecent;
    this.etSearch = etSearch;
    this.fabAddTest = fabAddTest;
    this.ivEmptyState = ivEmptyState;
    this.layoutEmptyState = layoutEmptyState;
    this.progressLoading = progressLoading;
    this.recyclerSoilTests = recyclerSoilTests;
    this.tvEmptyMessage = tvEmptyMessage;
    this.tvEmptyTitle = tvEmptyTitle;
    this.tvSubtitle = tvSubtitle;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSoilTestBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSoilTestBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_soil_test, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSoilTestBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appbar;
      AppBarLayout appbar = ViewBindings.findChildViewById(rootView, id);
      if (appbar == null) {
        break missingId;
      }

      id = R.id.btn_analyze;
      Button btnAnalyze = ViewBindings.findChildViewById(rootView, id);
      if (btnAnalyze == null) {
        break missingId;
      }

      id = R.id.btn_empty_add_test;
      Button btnEmptyAddTest = ViewBindings.findChildViewById(rootView, id);
      if (btnEmptyAddTest == null) {
        break missingId;
      }

      id = R.id.card_analysis_button;
      CardView cardAnalysisButton = ViewBindings.findChildViewById(rootView, id);
      if (cardAnalysisButton == null) {
        break missingId;
      }

      id = R.id.card_search;
      CardView cardSearch = ViewBindings.findChildViewById(rootView, id);
      if (cardSearch == null) {
        break missingId;
      }

      id = R.id.chip_acidic;
      Chip chipAcidic = ViewBindings.findChildViewById(rootView, id);
      if (chipAcidic == null) {
        break missingId;
      }

      id = R.id.chip_alkaline;
      Chip chipAlkaline = ViewBindings.findChildViewById(rootView, id);
      if (chipAlkaline == null) {
        break missingId;
      }

      id = R.id.chip_all;
      Chip chipAll = ViewBindings.findChildViewById(rootView, id);
      if (chipAll == null) {
        break missingId;
      }

      id = R.id.chip_container;
      LinearLayout chipContainer = ViewBindings.findChildViewById(rootView, id);
      if (chipContainer == null) {
        break missingId;
      }

      id = R.id.chip_recent;
      Chip chipRecent = ViewBindings.findChildViewById(rootView, id);
      if (chipRecent == null) {
        break missingId;
      }

      id = R.id.et_search;
      EditText etSearch = ViewBindings.findChildViewById(rootView, id);
      if (etSearch == null) {
        break missingId;
      }

      id = R.id.fab_add_test;
      FloatingActionButton fabAddTest = ViewBindings.findChildViewById(rootView, id);
      if (fabAddTest == null) {
        break missingId;
      }

      id = R.id.iv_empty_state;
      ImageView ivEmptyState = ViewBindings.findChildViewById(rootView, id);
      if (ivEmptyState == null) {
        break missingId;
      }

      id = R.id.layout_empty_state;
      LinearLayout layoutEmptyState = ViewBindings.findChildViewById(rootView, id);
      if (layoutEmptyState == null) {
        break missingId;
      }

      id = R.id.progress_loading;
      ProgressBar progressLoading = ViewBindings.findChildViewById(rootView, id);
      if (progressLoading == null) {
        break missingId;
      }

      id = R.id.recycler_soil_tests;
      RecyclerView recyclerSoilTests = ViewBindings.findChildViewById(rootView, id);
      if (recyclerSoilTests == null) {
        break missingId;
      }

      id = R.id.tv_empty_message;
      TextView tvEmptyMessage = ViewBindings.findChildViewById(rootView, id);
      if (tvEmptyMessage == null) {
        break missingId;
      }

      id = R.id.tv_empty_title;
      TextView tvEmptyTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvEmptyTitle == null) {
        break missingId;
      }

      id = R.id.tv_subtitle;
      TextView tvSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (tvSubtitle == null) {
        break missingId;
      }

      id = R.id.tv_title;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new FragmentSoilTestBinding((CoordinatorLayout) rootView, appbar, btnAnalyze,
          btnEmptyAddTest, cardAnalysisButton, cardSearch, chipAcidic, chipAlkaline, chipAll,
          chipContainer, chipRecent, etSearch, fabAddTest, ivEmptyState, layoutEmptyState,
          progressLoading, recyclerSoilTests, tvEmptyMessage, tvEmptyTitle, tvSubtitle, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
