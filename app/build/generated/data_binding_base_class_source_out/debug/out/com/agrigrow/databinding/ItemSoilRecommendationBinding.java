// Generated by view binder compiler. Do not edit!
package com.agrigrow.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.agrigrow.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemSoilRecommendationBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final Button btnDismiss;

  @NonNull
  public final Button btnMarkComplete;

  @NonNull
  public final CardView cardPriority;

  @NonNull
  public final MaterialCardView cardRecommendation;

  @NonNull
  public final TextView tvActionItems;

  @NonNull
  public final TextView tvActionItemsLabel;

  @NonNull
  public final TextView tvCompleted;

  @NonNull
  public final TextView tvPriority;

  @NonNull
  public final TextView tvRecommendationCategory;

  @NonNull
  public final TextView tvRecommendationDescription;

  @NonNull
  public final TextView tvRecommendationTitle;

  private ItemSoilRecommendationBinding(@NonNull MaterialCardView rootView,
      @NonNull Button btnDismiss, @NonNull Button btnMarkComplete, @NonNull CardView cardPriority,
      @NonNull MaterialCardView cardRecommendation, @NonNull TextView tvActionItems,
      @NonNull TextView tvActionItemsLabel, @NonNull TextView tvCompleted,
      @NonNull TextView tvPriority, @NonNull TextView tvRecommendationCategory,
      @NonNull TextView tvRecommendationDescription, @NonNull TextView tvRecommendationTitle) {
    this.rootView = rootView;
    this.btnDismiss = btnDismiss;
    this.btnMarkComplete = btnMarkComplete;
    this.cardPriority = cardPriority;
    this.cardRecommendation = cardRecommendation;
    this.tvActionItems = tvActionItems;
    this.tvActionItemsLabel = tvActionItemsLabel;
    this.tvCompleted = tvCompleted;
    this.tvPriority = tvPriority;
    this.tvRecommendationCategory = tvRecommendationCategory;
    this.tvRecommendationDescription = tvRecommendationDescription;
    this.tvRecommendationTitle = tvRecommendationTitle;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemSoilRecommendationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemSoilRecommendationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_soil_recommendation, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemSoilRecommendationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_dismiss;
      Button btnDismiss = ViewBindings.findChildViewById(rootView, id);
      if (btnDismiss == null) {
        break missingId;
      }

      id = R.id.btn_mark_complete;
      Button btnMarkComplete = ViewBindings.findChildViewById(rootView, id);
      if (btnMarkComplete == null) {
        break missingId;
      }

      id = R.id.card_priority;
      CardView cardPriority = ViewBindings.findChildViewById(rootView, id);
      if (cardPriority == null) {
        break missingId;
      }

      MaterialCardView cardRecommendation = (MaterialCardView) rootView;

      id = R.id.tv_action_items;
      TextView tvActionItems = ViewBindings.findChildViewById(rootView, id);
      if (tvActionItems == null) {
        break missingId;
      }

      id = R.id.tv_action_items_label;
      TextView tvActionItemsLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvActionItemsLabel == null) {
        break missingId;
      }

      id = R.id.tv_completed;
      TextView tvCompleted = ViewBindings.findChildViewById(rootView, id);
      if (tvCompleted == null) {
        break missingId;
      }

      id = R.id.tv_priority;
      TextView tvPriority = ViewBindings.findChildViewById(rootView, id);
      if (tvPriority == null) {
        break missingId;
      }

      id = R.id.tv_recommendation_category;
      TextView tvRecommendationCategory = ViewBindings.findChildViewById(rootView, id);
      if (tvRecommendationCategory == null) {
        break missingId;
      }

      id = R.id.tv_recommendation_description;
      TextView tvRecommendationDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvRecommendationDescription == null) {
        break missingId;
      }

      id = R.id.tv_recommendation_title;
      TextView tvRecommendationTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvRecommendationTitle == null) {
        break missingId;
      }

      return new ItemSoilRecommendationBinding((MaterialCardView) rootView, btnDismiss,
          btnMarkComplete, cardPriority, cardRecommendation, tvActionItems, tvActionItemsLabel,
          tvCompleted, tvPriority, tvRecommendationCategory, tvRecommendationDescription,
          tvRecommendationTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
