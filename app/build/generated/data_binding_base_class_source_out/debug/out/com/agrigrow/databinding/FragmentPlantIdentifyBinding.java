// Generated by view binder compiler. Do not edit!
package com.agrigrow.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.agrigrow.R;
import com.google.android.material.appbar.AppBarLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPlantIdentifyBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final Button buttonIdentify;

  @NonNull
  public final Button buttonSelectImage;

  @NonNull
  public final Button buttonTakePhoto;

  @NonNull
  public final CardView cardViewCamera;

  @NonNull
  public final ImageView imageViewPreview;

  @NonNull
  public final LinearLayout linearLayoutButtons;

  @NonNull
  public final FrameLayout loadingLayout;

  @NonNull
  public final TextView textViewInstructionTitle;

  @NonNull
  public final TextView textViewInstructions;

  @NonNull
  public final TextView textViewSubtitle;

  @NonNull
  public final TextView textViewTitle;

  private FragmentPlantIdentifyBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull Button buttonIdentify,
      @NonNull Button buttonSelectImage, @NonNull Button buttonTakePhoto,
      @NonNull CardView cardViewCamera, @NonNull ImageView imageViewPreview,
      @NonNull LinearLayout linearLayoutButtons, @NonNull FrameLayout loadingLayout,
      @NonNull TextView textViewInstructionTitle, @NonNull TextView textViewInstructions,
      @NonNull TextView textViewSubtitle, @NonNull TextView textViewTitle) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.buttonIdentify = buttonIdentify;
    this.buttonSelectImage = buttonSelectImage;
    this.buttonTakePhoto = buttonTakePhoto;
    this.cardViewCamera = cardViewCamera;
    this.imageViewPreview = imageViewPreview;
    this.linearLayoutButtons = linearLayoutButtons;
    this.loadingLayout = loadingLayout;
    this.textViewInstructionTitle = textViewInstructionTitle;
    this.textViewInstructions = textViewInstructions;
    this.textViewSubtitle = textViewSubtitle;
    this.textViewTitle = textViewTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPlantIdentifyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPlantIdentifyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_plant_identify, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPlantIdentifyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.buttonIdentify;
      Button buttonIdentify = ViewBindings.findChildViewById(rootView, id);
      if (buttonIdentify == null) {
        break missingId;
      }

      id = R.id.buttonSelectImage;
      Button buttonSelectImage = ViewBindings.findChildViewById(rootView, id);
      if (buttonSelectImage == null) {
        break missingId;
      }

      id = R.id.buttonTakePhoto;
      Button buttonTakePhoto = ViewBindings.findChildViewById(rootView, id);
      if (buttonTakePhoto == null) {
        break missingId;
      }

      id = R.id.cardViewCamera;
      CardView cardViewCamera = ViewBindings.findChildViewById(rootView, id);
      if (cardViewCamera == null) {
        break missingId;
      }

      id = R.id.imageViewPreview;
      ImageView imageViewPreview = ViewBindings.findChildViewById(rootView, id);
      if (imageViewPreview == null) {
        break missingId;
      }

      id = R.id.linearLayoutButtons;
      LinearLayout linearLayoutButtons = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutButtons == null) {
        break missingId;
      }

      id = R.id.loadingLayout;
      FrameLayout loadingLayout = ViewBindings.findChildViewById(rootView, id);
      if (loadingLayout == null) {
        break missingId;
      }

      id = R.id.textViewInstructionTitle;
      TextView textViewInstructionTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewInstructionTitle == null) {
        break missingId;
      }

      id = R.id.textViewInstructions;
      TextView textViewInstructions = ViewBindings.findChildViewById(rootView, id);
      if (textViewInstructions == null) {
        break missingId;
      }

      id = R.id.textViewSubtitle;
      TextView textViewSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewSubtitle == null) {
        break missingId;
      }

      id = R.id.textViewTitle;
      TextView textViewTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewTitle == null) {
        break missingId;
      }

      return new FragmentPlantIdentifyBinding((ConstraintLayout) rootView, appBarLayout,
          buttonIdentify, buttonSelectImage, buttonTakePhoto, cardViewCamera, imageViewPreview,
          linearLayoutButtons, loadingLayout, textViewInstructionTitle, textViewInstructions,
          textViewSubtitle, textViewTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
