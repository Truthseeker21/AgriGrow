// Generated by view binder compiler. Do not edit!
package com.agrigrow.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.agrigrow.R;
import com.google.android.material.appbar.AppBarLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityVideoPlayerBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appbar;

  @NonNull
  public final Button btnSubscribe;

  @NonNull
  public final ImageView ivAuthorAvatar;

  @NonNull
  public final ImageView ivFavorite;

  @NonNull
  public final ImageView ivLike;

  @NonNull
  public final ImageView ivPlayButton;

  @NonNull
  public final ImageView ivVideoThumbnail;

  @NonNull
  public final LinearLayout layoutDownload;

  @NonNull
  public final LinearLayout layoutFavorite;

  @NonNull
  public final LinearLayout layoutLike;

  @NonNull
  public final LinearLayout layoutShare;

  @NonNull
  public final ProgressBar progressVideoLoading;

  @NonNull
  public final RecyclerView recyclerRelatedVideos;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvAuthorName;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvSubscriberCount;

  @NonNull
  public final TextView tvVideoDescription;

  @NonNull
  public final TextView tvVideoTitle;

  @NonNull
  public final TextView tvViewCount;

  @NonNull
  public final FrameLayout videoContainer;

  private ActivityVideoPlayerBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appbar, @NonNull Button btnSubscribe, @NonNull ImageView ivAuthorAvatar,
      @NonNull ImageView ivFavorite, @NonNull ImageView ivLike, @NonNull ImageView ivPlayButton,
      @NonNull ImageView ivVideoThumbnail, @NonNull LinearLayout layoutDownload,
      @NonNull LinearLayout layoutFavorite, @NonNull LinearLayout layoutLike,
      @NonNull LinearLayout layoutShare, @NonNull ProgressBar progressVideoLoading,
      @NonNull RecyclerView recyclerRelatedVideos, @NonNull Toolbar toolbar,
      @NonNull TextView tvAuthorName, @NonNull TextView tvDate, @NonNull TextView tvSubscriberCount,
      @NonNull TextView tvVideoDescription, @NonNull TextView tvVideoTitle,
      @NonNull TextView tvViewCount, @NonNull FrameLayout videoContainer) {
    this.rootView = rootView;
    this.appbar = appbar;
    this.btnSubscribe = btnSubscribe;
    this.ivAuthorAvatar = ivAuthorAvatar;
    this.ivFavorite = ivFavorite;
    this.ivLike = ivLike;
    this.ivPlayButton = ivPlayButton;
    this.ivVideoThumbnail = ivVideoThumbnail;
    this.layoutDownload = layoutDownload;
    this.layoutFavorite = layoutFavorite;
    this.layoutLike = layoutLike;
    this.layoutShare = layoutShare;
    this.progressVideoLoading = progressVideoLoading;
    this.recyclerRelatedVideos = recyclerRelatedVideos;
    this.toolbar = toolbar;
    this.tvAuthorName = tvAuthorName;
    this.tvDate = tvDate;
    this.tvSubscriberCount = tvSubscriberCount;
    this.tvVideoDescription = tvVideoDescription;
    this.tvVideoTitle = tvVideoTitle;
    this.tvViewCount = tvViewCount;
    this.videoContainer = videoContainer;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityVideoPlayerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityVideoPlayerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_video_player, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityVideoPlayerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appbar;
      AppBarLayout appbar = ViewBindings.findChildViewById(rootView, id);
      if (appbar == null) {
        break missingId;
      }

      id = R.id.btn_subscribe;
      Button btnSubscribe = ViewBindings.findChildViewById(rootView, id);
      if (btnSubscribe == null) {
        break missingId;
      }

      id = R.id.iv_author_avatar;
      ImageView ivAuthorAvatar = ViewBindings.findChildViewById(rootView, id);
      if (ivAuthorAvatar == null) {
        break missingId;
      }

      id = R.id.iv_favorite;
      ImageView ivFavorite = ViewBindings.findChildViewById(rootView, id);
      if (ivFavorite == null) {
        break missingId;
      }

      id = R.id.iv_like;
      ImageView ivLike = ViewBindings.findChildViewById(rootView, id);
      if (ivLike == null) {
        break missingId;
      }

      id = R.id.iv_play_button;
      ImageView ivPlayButton = ViewBindings.findChildViewById(rootView, id);
      if (ivPlayButton == null) {
        break missingId;
      }

      id = R.id.iv_video_thumbnail;
      ImageView ivVideoThumbnail = ViewBindings.findChildViewById(rootView, id);
      if (ivVideoThumbnail == null) {
        break missingId;
      }

      id = R.id.layout_download;
      LinearLayout layoutDownload = ViewBindings.findChildViewById(rootView, id);
      if (layoutDownload == null) {
        break missingId;
      }

      id = R.id.layout_favorite;
      LinearLayout layoutFavorite = ViewBindings.findChildViewById(rootView, id);
      if (layoutFavorite == null) {
        break missingId;
      }

      id = R.id.layout_like;
      LinearLayout layoutLike = ViewBindings.findChildViewById(rootView, id);
      if (layoutLike == null) {
        break missingId;
      }

      id = R.id.layout_share;
      LinearLayout layoutShare = ViewBindings.findChildViewById(rootView, id);
      if (layoutShare == null) {
        break missingId;
      }

      id = R.id.progress_video_loading;
      ProgressBar progressVideoLoading = ViewBindings.findChildViewById(rootView, id);
      if (progressVideoLoading == null) {
        break missingId;
      }

      id = R.id.recycler_related_videos;
      RecyclerView recyclerRelatedVideos = ViewBindings.findChildViewById(rootView, id);
      if (recyclerRelatedVideos == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tv_author_name;
      TextView tvAuthorName = ViewBindings.findChildViewById(rootView, id);
      if (tvAuthorName == null) {
        break missingId;
      }

      id = R.id.tv_date;
      TextView tvDate = ViewBindings.findChildViewById(rootView, id);
      if (tvDate == null) {
        break missingId;
      }

      id = R.id.tv_subscriber_count;
      TextView tvSubscriberCount = ViewBindings.findChildViewById(rootView, id);
      if (tvSubscriberCount == null) {
        break missingId;
      }

      id = R.id.tv_video_description;
      TextView tvVideoDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvVideoDescription == null) {
        break missingId;
      }

      id = R.id.tv_video_title;
      TextView tvVideoTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvVideoTitle == null) {
        break missingId;
      }

      id = R.id.tv_view_count;
      TextView tvViewCount = ViewBindings.findChildViewById(rootView, id);
      if (tvViewCount == null) {
        break missingId;
      }

      id = R.id.video_container;
      FrameLayout videoContainer = ViewBindings.findChildViewById(rootView, id);
      if (videoContainer == null) {
        break missingId;
      }

      return new ActivityVideoPlayerBinding((CoordinatorLayout) rootView, appbar, btnSubscribe,
          ivAuthorAvatar, ivFavorite, ivLike, ivPlayButton, ivVideoThumbnail, layoutDownload,
          layoutFavorite, layoutLike, layoutShare, progressVideoLoading, recyclerRelatedVideos,
          toolbar, tvAuthorName, tvDate, tvSubscriberCount, tvVideoDescription, tvVideoTitle,
          tvViewCount, videoContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
