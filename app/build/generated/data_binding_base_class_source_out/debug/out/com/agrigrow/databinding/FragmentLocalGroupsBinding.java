// Generated by view binder compiler. Do not edit!
package com.agrigrow.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.agrigrow.R;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLocalGroupsBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final Button btnCreateGroup;

  @NonNull
  public final Button btnViewMap;

  @NonNull
  public final CardView cardMapPreview;

  @NonNull
  public final Chip chipAllGroups;

  @NonNull
  public final Chip chipCommunityGardens;

  @NonNull
  public final ChipGroup chipGroupFilter;

  @NonNull
  public final Chip chipJoined;

  @NonNull
  public final Chip chipNearby;

  @NonNull
  public final Chip chipPopular;

  @NonNull
  public final Chip chipSeedExchange;

  @NonNull
  public final EditText etSearchGroups;

  @NonNull
  public final FloatingActionButton fabCreateGroup;

  @NonNull
  public final ImageView ivMapPreview;

  @NonNull
  public final LinearLayout layoutEmptyState;

  @NonNull
  public final ProgressBar progressLoading;

  @NonNull
  public final RecyclerView recyclerGroups;

  @NonNull
  public final TextView tvEmptyStateMessage;

  @NonNull
  public final TextView tvGroupsHeader;

  @NonNull
  public final TextView tvGroupsListTitle;

  @NonNull
  public final TextView tvGroupsSubheader;

  private FragmentLocalGroupsBinding(@NonNull CoordinatorLayout rootView,
      @NonNull Button btnCreateGroup, @NonNull Button btnViewMap, @NonNull CardView cardMapPreview,
      @NonNull Chip chipAllGroups, @NonNull Chip chipCommunityGardens,
      @NonNull ChipGroup chipGroupFilter, @NonNull Chip chipJoined, @NonNull Chip chipNearby,
      @NonNull Chip chipPopular, @NonNull Chip chipSeedExchange, @NonNull EditText etSearchGroups,
      @NonNull FloatingActionButton fabCreateGroup, @NonNull ImageView ivMapPreview,
      @NonNull LinearLayout layoutEmptyState, @NonNull ProgressBar progressLoading,
      @NonNull RecyclerView recyclerGroups, @NonNull TextView tvEmptyStateMessage,
      @NonNull TextView tvGroupsHeader, @NonNull TextView tvGroupsListTitle,
      @NonNull TextView tvGroupsSubheader) {
    this.rootView = rootView;
    this.btnCreateGroup = btnCreateGroup;
    this.btnViewMap = btnViewMap;
    this.cardMapPreview = cardMapPreview;
    this.chipAllGroups = chipAllGroups;
    this.chipCommunityGardens = chipCommunityGardens;
    this.chipGroupFilter = chipGroupFilter;
    this.chipJoined = chipJoined;
    this.chipNearby = chipNearby;
    this.chipPopular = chipPopular;
    this.chipSeedExchange = chipSeedExchange;
    this.etSearchGroups = etSearchGroups;
    this.fabCreateGroup = fabCreateGroup;
    this.ivMapPreview = ivMapPreview;
    this.layoutEmptyState = layoutEmptyState;
    this.progressLoading = progressLoading;
    this.recyclerGroups = recyclerGroups;
    this.tvEmptyStateMessage = tvEmptyStateMessage;
    this.tvGroupsHeader = tvGroupsHeader;
    this.tvGroupsListTitle = tvGroupsListTitle;
    this.tvGroupsSubheader = tvGroupsSubheader;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLocalGroupsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLocalGroupsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_local_groups, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLocalGroupsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_create_group;
      Button btnCreateGroup = ViewBindings.findChildViewById(rootView, id);
      if (btnCreateGroup == null) {
        break missingId;
      }

      id = R.id.btn_view_map;
      Button btnViewMap = ViewBindings.findChildViewById(rootView, id);
      if (btnViewMap == null) {
        break missingId;
      }

      id = R.id.card_map_preview;
      CardView cardMapPreview = ViewBindings.findChildViewById(rootView, id);
      if (cardMapPreview == null) {
        break missingId;
      }

      id = R.id.chip_all_groups;
      Chip chipAllGroups = ViewBindings.findChildViewById(rootView, id);
      if (chipAllGroups == null) {
        break missingId;
      }

      id = R.id.chip_community_gardens;
      Chip chipCommunityGardens = ViewBindings.findChildViewById(rootView, id);
      if (chipCommunityGardens == null) {
        break missingId;
      }

      id = R.id.chip_group_filter;
      ChipGroup chipGroupFilter = ViewBindings.findChildViewById(rootView, id);
      if (chipGroupFilter == null) {
        break missingId;
      }

      id = R.id.chip_joined;
      Chip chipJoined = ViewBindings.findChildViewById(rootView, id);
      if (chipJoined == null) {
        break missingId;
      }

      id = R.id.chip_nearby;
      Chip chipNearby = ViewBindings.findChildViewById(rootView, id);
      if (chipNearby == null) {
        break missingId;
      }

      id = R.id.chip_popular;
      Chip chipPopular = ViewBindings.findChildViewById(rootView, id);
      if (chipPopular == null) {
        break missingId;
      }

      id = R.id.chip_seed_exchange;
      Chip chipSeedExchange = ViewBindings.findChildViewById(rootView, id);
      if (chipSeedExchange == null) {
        break missingId;
      }

      id = R.id.et_search_groups;
      EditText etSearchGroups = ViewBindings.findChildViewById(rootView, id);
      if (etSearchGroups == null) {
        break missingId;
      }

      id = R.id.fab_create_group;
      FloatingActionButton fabCreateGroup = ViewBindings.findChildViewById(rootView, id);
      if (fabCreateGroup == null) {
        break missingId;
      }

      id = R.id.iv_map_preview;
      ImageView ivMapPreview = ViewBindings.findChildViewById(rootView, id);
      if (ivMapPreview == null) {
        break missingId;
      }

      id = R.id.layout_empty_state;
      LinearLayout layoutEmptyState = ViewBindings.findChildViewById(rootView, id);
      if (layoutEmptyState == null) {
        break missingId;
      }

      id = R.id.progress_loading;
      ProgressBar progressLoading = ViewBindings.findChildViewById(rootView, id);
      if (progressLoading == null) {
        break missingId;
      }

      id = R.id.recycler_groups;
      RecyclerView recyclerGroups = ViewBindings.findChildViewById(rootView, id);
      if (recyclerGroups == null) {
        break missingId;
      }

      id = R.id.tv_empty_state_message;
      TextView tvEmptyStateMessage = ViewBindings.findChildViewById(rootView, id);
      if (tvEmptyStateMessage == null) {
        break missingId;
      }

      id = R.id.tv_groups_header;
      TextView tvGroupsHeader = ViewBindings.findChildViewById(rootView, id);
      if (tvGroupsHeader == null) {
        break missingId;
      }

      id = R.id.tv_groups_list_title;
      TextView tvGroupsListTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvGroupsListTitle == null) {
        break missingId;
      }

      id = R.id.tv_groups_subheader;
      TextView tvGroupsSubheader = ViewBindings.findChildViewById(rootView, id);
      if (tvGroupsSubheader == null) {
        break missingId;
      }

      return new FragmentLocalGroupsBinding((CoordinatorLayout) rootView, btnCreateGroup,
          btnViewMap, cardMapPreview, chipAllGroups, chipCommunityGardens, chipGroupFilter,
          chipJoined, chipNearby, chipPopular, chipSeedExchange, etSearchGroups, fabCreateGroup,
          ivMapPreview, layoutEmptyState, progressLoading, recyclerGroups, tvEmptyStateMessage,
          tvGroupsHeader, tvGroupsListTitle, tvGroupsSubheader);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
