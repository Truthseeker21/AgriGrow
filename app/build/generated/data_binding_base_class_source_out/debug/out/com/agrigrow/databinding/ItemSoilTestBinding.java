// Generated by view binder compiler. Do not edit!
package com.agrigrow.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.agrigrow.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemSoilTestBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView cardHealthScore;

  @NonNull
  public final CardView cardSoilTest;

  @NonNull
  public final View divider;

  @NonNull
  public final TextView tvHealthScore;

  @NonNull
  public final TextView tvHealthStatus;

  @NonNull
  public final TextView tvRecommendationsAvailable;

  @NonNull
  public final TextView tvTestDate;

  @NonNull
  public final TextView tvTestLocation;

  @NonNull
  public final TextView tvTestName;

  @NonNull
  public final TextView tvTestSummary;

  private ItemSoilTestBinding(@NonNull CardView rootView, @NonNull CardView cardHealthScore,
      @NonNull CardView cardSoilTest, @NonNull View divider, @NonNull TextView tvHealthScore,
      @NonNull TextView tvHealthStatus, @NonNull TextView tvRecommendationsAvailable,
      @NonNull TextView tvTestDate, @NonNull TextView tvTestLocation, @NonNull TextView tvTestName,
      @NonNull TextView tvTestSummary) {
    this.rootView = rootView;
    this.cardHealthScore = cardHealthScore;
    this.cardSoilTest = cardSoilTest;
    this.divider = divider;
    this.tvHealthScore = tvHealthScore;
    this.tvHealthStatus = tvHealthStatus;
    this.tvRecommendationsAvailable = tvRecommendationsAvailable;
    this.tvTestDate = tvTestDate;
    this.tvTestLocation = tvTestLocation;
    this.tvTestName = tvTestName;
    this.tvTestSummary = tvTestSummary;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemSoilTestBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemSoilTestBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_soil_test, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemSoilTestBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_health_score;
      CardView cardHealthScore = ViewBindings.findChildViewById(rootView, id);
      if (cardHealthScore == null) {
        break missingId;
      }

      CardView cardSoilTest = (CardView) rootView;

      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.tv_health_score;
      TextView tvHealthScore = ViewBindings.findChildViewById(rootView, id);
      if (tvHealthScore == null) {
        break missingId;
      }

      id = R.id.tv_health_status;
      TextView tvHealthStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvHealthStatus == null) {
        break missingId;
      }

      id = R.id.tv_recommendations_available;
      TextView tvRecommendationsAvailable = ViewBindings.findChildViewById(rootView, id);
      if (tvRecommendationsAvailable == null) {
        break missingId;
      }

      id = R.id.tv_test_date;
      TextView tvTestDate = ViewBindings.findChildViewById(rootView, id);
      if (tvTestDate == null) {
        break missingId;
      }

      id = R.id.tv_test_location;
      TextView tvTestLocation = ViewBindings.findChildViewById(rootView, id);
      if (tvTestLocation == null) {
        break missingId;
      }

      id = R.id.tv_test_name;
      TextView tvTestName = ViewBindings.findChildViewById(rootView, id);
      if (tvTestName == null) {
        break missingId;
      }

      id = R.id.tv_test_summary;
      TextView tvTestSummary = ViewBindings.findChildViewById(rootView, id);
      if (tvTestSummary == null) {
        break missingId;
      }

      return new ItemSoilTestBinding((CardView) rootView, cardHealthScore, cardSoilTest, divider,
          tvHealthScore, tvHealthStatus, tvRecommendationsAvailable, tvTestDate, tvTestLocation,
          tvTestName, tvTestSummary);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
