// Generated by view binder compiler. Do not edit!
package com.agrigrow.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.agrigrow.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogSoilTestDetailBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final Button btnClose;

  @NonNull
  public final Button btnEdit;

  @NonNull
  public final CardView cardHealthScore;

  @NonNull
  public final CardView cardLocation;

  @NonNull
  public final CardView cardNotes;

  @NonNull
  public final CardView cardRecommendations;

  @NonNull
  public final CardView cardSoilInfo;

  @NonNull
  public final ImageView ivLocationMap;

  @NonNull
  public final LinearLayout layoutNpkValues;

  @NonNull
  public final ConstraintLayout layoutNutrients;

  @NonNull
  public final ConstraintLayout layoutOrganicMatter;

  @NonNull
  public final ConstraintLayout layoutPh;

  @NonNull
  public final ProgressBar progressOrganicMatter;

  @NonNull
  public final ProgressBar progressPh;

  @NonNull
  public final RecyclerView recyclerRecommendations;

  @NonNull
  public final TextView tvHealthScore;

  @NonNull
  public final TextView tvHealthStatus;

  @NonNull
  public final TextView tvLocationTitle;

  @NonNull
  public final TextView tvLocationValue;

  @NonNull
  public final TextView tvNitrogenValue;

  @NonNull
  public final TextView tvNoNotes;

  @NonNull
  public final TextView tvNoRecommendations;

  @NonNull
  public final TextView tvNotes;

  @NonNull
  public final TextView tvNotesTitle;

  @NonNull
  public final TextView tvNutrientsLabel;

  @NonNull
  public final TextView tvOrganicMatterLabel;

  @NonNull
  public final TextView tvOrganicMatterValue;

  @NonNull
  public final TextView tvPhLabel;

  @NonNull
  public final TextView tvPhMax;

  @NonNull
  public final TextView tvPhMin;

  @NonNull
  public final TextView tvPhNeutral;

  @NonNull
  public final TextView tvPhValue;

  @NonNull
  public final TextView tvPhosphorusValue;

  @NonNull
  public final TextView tvPotassiumValue;

  @NonNull
  public final TextView tvRecommendationsTitle;

  @NonNull
  public final TextView tvSoilDetailsTitle;

  @NonNull
  public final TextView tvSoilType;

  @NonNull
  public final TextView tvSoilTypeLabel;

  @NonNull
  public final TextView tvTestDate;

  @NonNull
  public final TextView tvTestName;

  private DialogSoilTestDetailBinding(@NonNull NestedScrollView rootView, @NonNull Button btnClose,
      @NonNull Button btnEdit, @NonNull CardView cardHealthScore, @NonNull CardView cardLocation,
      @NonNull CardView cardNotes, @NonNull CardView cardRecommendations,
      @NonNull CardView cardSoilInfo, @NonNull ImageView ivLocationMap,
      @NonNull LinearLayout layoutNpkValues, @NonNull ConstraintLayout layoutNutrients,
      @NonNull ConstraintLayout layoutOrganicMatter, @NonNull ConstraintLayout layoutPh,
      @NonNull ProgressBar progressOrganicMatter, @NonNull ProgressBar progressPh,
      @NonNull RecyclerView recyclerRecommendations, @NonNull TextView tvHealthScore,
      @NonNull TextView tvHealthStatus, @NonNull TextView tvLocationTitle,
      @NonNull TextView tvLocationValue, @NonNull TextView tvNitrogenValue,
      @NonNull TextView tvNoNotes, @NonNull TextView tvNoRecommendations, @NonNull TextView tvNotes,
      @NonNull TextView tvNotesTitle, @NonNull TextView tvNutrientsLabel,
      @NonNull TextView tvOrganicMatterLabel, @NonNull TextView tvOrganicMatterValue,
      @NonNull TextView tvPhLabel, @NonNull TextView tvPhMax, @NonNull TextView tvPhMin,
      @NonNull TextView tvPhNeutral, @NonNull TextView tvPhValue,
      @NonNull TextView tvPhosphorusValue, @NonNull TextView tvPotassiumValue,
      @NonNull TextView tvRecommendationsTitle, @NonNull TextView tvSoilDetailsTitle,
      @NonNull TextView tvSoilType, @NonNull TextView tvSoilTypeLabel, @NonNull TextView tvTestDate,
      @NonNull TextView tvTestName) {
    this.rootView = rootView;
    this.btnClose = btnClose;
    this.btnEdit = btnEdit;
    this.cardHealthScore = cardHealthScore;
    this.cardLocation = cardLocation;
    this.cardNotes = cardNotes;
    this.cardRecommendations = cardRecommendations;
    this.cardSoilInfo = cardSoilInfo;
    this.ivLocationMap = ivLocationMap;
    this.layoutNpkValues = layoutNpkValues;
    this.layoutNutrients = layoutNutrients;
    this.layoutOrganicMatter = layoutOrganicMatter;
    this.layoutPh = layoutPh;
    this.progressOrganicMatter = progressOrganicMatter;
    this.progressPh = progressPh;
    this.recyclerRecommendations = recyclerRecommendations;
    this.tvHealthScore = tvHealthScore;
    this.tvHealthStatus = tvHealthStatus;
    this.tvLocationTitle = tvLocationTitle;
    this.tvLocationValue = tvLocationValue;
    this.tvNitrogenValue = tvNitrogenValue;
    this.tvNoNotes = tvNoNotes;
    this.tvNoRecommendations = tvNoRecommendations;
    this.tvNotes = tvNotes;
    this.tvNotesTitle = tvNotesTitle;
    this.tvNutrientsLabel = tvNutrientsLabel;
    this.tvOrganicMatterLabel = tvOrganicMatterLabel;
    this.tvOrganicMatterValue = tvOrganicMatterValue;
    this.tvPhLabel = tvPhLabel;
    this.tvPhMax = tvPhMax;
    this.tvPhMin = tvPhMin;
    this.tvPhNeutral = tvPhNeutral;
    this.tvPhValue = tvPhValue;
    this.tvPhosphorusValue = tvPhosphorusValue;
    this.tvPotassiumValue = tvPotassiumValue;
    this.tvRecommendationsTitle = tvRecommendationsTitle;
    this.tvSoilDetailsTitle = tvSoilDetailsTitle;
    this.tvSoilType = tvSoilType;
    this.tvSoilTypeLabel = tvSoilTypeLabel;
    this.tvTestDate = tvTestDate;
    this.tvTestName = tvTestName;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogSoilTestDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogSoilTestDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_soil_test_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogSoilTestDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_close;
      Button btnClose = ViewBindings.findChildViewById(rootView, id);
      if (btnClose == null) {
        break missingId;
      }

      id = R.id.btn_edit;
      Button btnEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnEdit == null) {
        break missingId;
      }

      id = R.id.card_health_score;
      CardView cardHealthScore = ViewBindings.findChildViewById(rootView, id);
      if (cardHealthScore == null) {
        break missingId;
      }

      id = R.id.card_location;
      CardView cardLocation = ViewBindings.findChildViewById(rootView, id);
      if (cardLocation == null) {
        break missingId;
      }

      id = R.id.card_notes;
      CardView cardNotes = ViewBindings.findChildViewById(rootView, id);
      if (cardNotes == null) {
        break missingId;
      }

      id = R.id.card_recommendations;
      CardView cardRecommendations = ViewBindings.findChildViewById(rootView, id);
      if (cardRecommendations == null) {
        break missingId;
      }

      id = R.id.card_soil_info;
      CardView cardSoilInfo = ViewBindings.findChildViewById(rootView, id);
      if (cardSoilInfo == null) {
        break missingId;
      }

      id = R.id.iv_location_map;
      ImageView ivLocationMap = ViewBindings.findChildViewById(rootView, id);
      if (ivLocationMap == null) {
        break missingId;
      }

      id = R.id.layout_npk_values;
      LinearLayout layoutNpkValues = ViewBindings.findChildViewById(rootView, id);
      if (layoutNpkValues == null) {
        break missingId;
      }

      id = R.id.layout_nutrients;
      ConstraintLayout layoutNutrients = ViewBindings.findChildViewById(rootView, id);
      if (layoutNutrients == null) {
        break missingId;
      }

      id = R.id.layout_organic_matter;
      ConstraintLayout layoutOrganicMatter = ViewBindings.findChildViewById(rootView, id);
      if (layoutOrganicMatter == null) {
        break missingId;
      }

      id = R.id.layout_ph;
      ConstraintLayout layoutPh = ViewBindings.findChildViewById(rootView, id);
      if (layoutPh == null) {
        break missingId;
      }

      id = R.id.progress_organic_matter;
      ProgressBar progressOrganicMatter = ViewBindings.findChildViewById(rootView, id);
      if (progressOrganicMatter == null) {
        break missingId;
      }

      id = R.id.progress_ph;
      ProgressBar progressPh = ViewBindings.findChildViewById(rootView, id);
      if (progressPh == null) {
        break missingId;
      }

      id = R.id.recycler_recommendations;
      RecyclerView recyclerRecommendations = ViewBindings.findChildViewById(rootView, id);
      if (recyclerRecommendations == null) {
        break missingId;
      }

      id = R.id.tv_health_score;
      TextView tvHealthScore = ViewBindings.findChildViewById(rootView, id);
      if (tvHealthScore == null) {
        break missingId;
      }

      id = R.id.tv_health_status;
      TextView tvHealthStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvHealthStatus == null) {
        break missingId;
      }

      id = R.id.tv_location_title;
      TextView tvLocationTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvLocationTitle == null) {
        break missingId;
      }

      id = R.id.tv_location_value;
      TextView tvLocationValue = ViewBindings.findChildViewById(rootView, id);
      if (tvLocationValue == null) {
        break missingId;
      }

      id = R.id.tv_nitrogen_value;
      TextView tvNitrogenValue = ViewBindings.findChildViewById(rootView, id);
      if (tvNitrogenValue == null) {
        break missingId;
      }

      id = R.id.tv_no_notes;
      TextView tvNoNotes = ViewBindings.findChildViewById(rootView, id);
      if (tvNoNotes == null) {
        break missingId;
      }

      id = R.id.tv_no_recommendations;
      TextView tvNoRecommendations = ViewBindings.findChildViewById(rootView, id);
      if (tvNoRecommendations == null) {
        break missingId;
      }

      id = R.id.tv_notes;
      TextView tvNotes = ViewBindings.findChildViewById(rootView, id);
      if (tvNotes == null) {
        break missingId;
      }

      id = R.id.tv_notes_title;
      TextView tvNotesTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvNotesTitle == null) {
        break missingId;
      }

      id = R.id.tv_nutrients_label;
      TextView tvNutrientsLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvNutrientsLabel == null) {
        break missingId;
      }

      id = R.id.tv_organic_matter_label;
      TextView tvOrganicMatterLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvOrganicMatterLabel == null) {
        break missingId;
      }

      id = R.id.tv_organic_matter_value;
      TextView tvOrganicMatterValue = ViewBindings.findChildViewById(rootView, id);
      if (tvOrganicMatterValue == null) {
        break missingId;
      }

      id = R.id.tv_ph_label;
      TextView tvPhLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvPhLabel == null) {
        break missingId;
      }

      id = R.id.tv_ph_max;
      TextView tvPhMax = ViewBindings.findChildViewById(rootView, id);
      if (tvPhMax == null) {
        break missingId;
      }

      id = R.id.tv_ph_min;
      TextView tvPhMin = ViewBindings.findChildViewById(rootView, id);
      if (tvPhMin == null) {
        break missingId;
      }

      id = R.id.tv_ph_neutral;
      TextView tvPhNeutral = ViewBindings.findChildViewById(rootView, id);
      if (tvPhNeutral == null) {
        break missingId;
      }

      id = R.id.tv_ph_value;
      TextView tvPhValue = ViewBindings.findChildViewById(rootView, id);
      if (tvPhValue == null) {
        break missingId;
      }

      id = R.id.tv_phosphorus_value;
      TextView tvPhosphorusValue = ViewBindings.findChildViewById(rootView, id);
      if (tvPhosphorusValue == null) {
        break missingId;
      }

      id = R.id.tv_potassium_value;
      TextView tvPotassiumValue = ViewBindings.findChildViewById(rootView, id);
      if (tvPotassiumValue == null) {
        break missingId;
      }

      id = R.id.tv_recommendations_title;
      TextView tvRecommendationsTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvRecommendationsTitle == null) {
        break missingId;
      }

      id = R.id.tv_soil_details_title;
      TextView tvSoilDetailsTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvSoilDetailsTitle == null) {
        break missingId;
      }

      id = R.id.tv_soil_type;
      TextView tvSoilType = ViewBindings.findChildViewById(rootView, id);
      if (tvSoilType == null) {
        break missingId;
      }

      id = R.id.tv_soil_type_label;
      TextView tvSoilTypeLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvSoilTypeLabel == null) {
        break missingId;
      }

      id = R.id.tv_test_date;
      TextView tvTestDate = ViewBindings.findChildViewById(rootView, id);
      if (tvTestDate == null) {
        break missingId;
      }

      id = R.id.tv_test_name;
      TextView tvTestName = ViewBindings.findChildViewById(rootView, id);
      if (tvTestName == null) {
        break missingId;
      }

      return new DialogSoilTestDetailBinding((NestedScrollView) rootView, btnClose, btnEdit,
          cardHealthScore, cardLocation, cardNotes, cardRecommendations, cardSoilInfo,
          ivLocationMap, layoutNpkValues, layoutNutrients, layoutOrganicMatter, layoutPh,
          progressOrganicMatter, progressPh, recyclerRecommendations, tvHealthScore, tvHealthStatus,
          tvLocationTitle, tvLocationValue, tvNitrogenValue, tvNoNotes, tvNoRecommendations,
          tvNotes, tvNotesTitle, tvNutrientsLabel, tvOrganicMatterLabel, tvOrganicMatterValue,
          tvPhLabel, tvPhMax, tvPhMin, tvPhNeutral, tvPhValue, tvPhosphorusValue, tvPotassiumValue,
          tvRecommendationsTitle, tvSoilDetailsTitle, tvSoilType, tvSoilTypeLabel, tvTestDate,
          tvTestName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
