plugins {
    id 'com.android.application'
}

android {
    namespace "com.agrigrow"
    compileSdkVersion 33
    defaultConfig {
        applicationId "com.agrigrow"
        minSdkVersion 23
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        
        // Load API keys from local.properties
        def localProperties = new Properties()
        def localPropertiesFile = rootProject.file('local.properties')
        if (localPropertiesFile.exists()) {
            localPropertiesFile.withReader('UTF-8') { reader ->
                localProperties.load(reader)
            }
        }
        
        // Set API keys in BuildConfig
        buildConfigField "String", "OPENWEATHERMAP_API_KEY", getApiKey(localProperties, "OPENWEATHERMAP_API_KEY")
        buildConfigField "String", "PLANT_ID_API_KEY", getApiKey(localProperties, "PLANT_ID_API_KEY")
        
        // Set API keys in manifest
        manifestPlaceholders = [
                OPENWEATHERMAP_API_KEY: getApiKeyPlain(localProperties, "OPENWEATHERMAP_API_KEY"),
                PLANT_ID_API_KEY: getApiKeyPlain(localProperties, "PLANT_ID_API_KEY")
        ]
    }
    
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    
    buildFeatures {
        viewBinding true
        buildConfig true
    }
}

// Function to read API key from local.properties with quotes for BuildConfigField
def getApiKey(Properties properties, String name) {
    return properties.getProperty(name) != null ? "\"" + properties.getProperty(name) + "\"" : "\"\"";
}

// Function to read API key from local.properties without quotes for manifestPlaceholders
def getApiKeyPlain(Properties properties, String name) {
    return properties.getProperty(name) != null ? properties.getProperty(name) : "";
}

dependencies {
    // AndroidX Core libraries
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    
    // Material Design Components
    implementation 'com.google.android.material:material:1.9.0'
    
    // Navigation Components
    implementation 'androidx.navigation:navigation-fragment:2.6.0'
    implementation 'androidx.navigation:navigation-ui:2.6.0'
    
    // Lifecycle Components
    implementation 'androidx.lifecycle:lifecycle-livedata:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.6.1'
    
    // Room Database
    implementation 'androidx.room:room-runtime:2.5.2'
    annotationProcessor 'androidx.room:room-compiler:2.5.2'
    
    // Network & Image Loading
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.11.0'
    implementation 'com.github.bumptech.glide:glide:4.15.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.15.1'
    
    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}